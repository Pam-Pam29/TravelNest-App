rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write only their own data
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || 
                 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Everyone can read packages, only admins can write
    match /packages/{packageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users can read their own bookings, admins can read all
    match /bookings/{bookingId} {
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || 
                 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (resource.data.userId == request.auth.uid || 
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
}
 match /databases/{database}/documents {
    // Allow authenticated users to create documents in customPackageRequests collection
    match /customPackageRequests/{document} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || hasAdminRole());
      allow update, delete: if hasAdminRole();
    }
    
    // Helper function to check admin role
    function hasAdminRole() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
}